
trigger:
# - production 
  - develop

pool:
  name: Default


steps:
- checkout: self  # self represents the repo where the initial Pipelines YAML file was found
  clean: true
  persistCredentials: true


- script: | 
    echo '$(System.DefaultWorkingDirectory)'
    echo '$(Build.ArtifactStagingDirectory)'
    echo '$(Agent.BuildDirectory)'
    echo '$(Build.SourcesDirectory)'
    echo '$(Build.BinariesDirectory)'
    echo '$(Build.TriggeredBy.DefinitionName)'
    echo '$(Build.Reason)'
    echo '$(Build.SourceBranch)'
    echo '$(Build.SourceBranchName)'
    echo '$(Build.BuildId)'
    echo '$(Build.BuildNumber)'
    echo '$(Build.ArtifactStagingDirectory)'
  displayName: 'Run a one-line script second'

# Build number
# https://www.andrewhoefling.com/Blog/Post/azure-pipelines-custom-build-numbers-in-yaml-templates
# https://www.patriksvensson.se/2019/03/build-counters-in-azure-devops


- script: |
    git fetch origin '+refs/heads/*:refs/heads/*'
    git checkout --quiet $(Build.SourceBranchName)
    git reset --hard $(Build.SourceBranchName)
    git pull
    git branch
  displayName: 'Set valid branch name: $(Build.SourceBranchName)'


#   git branch --set-upstream-to=$(Build.SourceBranch)

# - script: | 
#     git checkout -b $(Build.SourceBranchName)
#   displayName: 'Run set local branch'

- task: PowerShell@2
  env:
    azureStorageConnectionString: $(azureStorageConnectionString)

  inputs:
    targetType: 'filePath' # Optional. Options: filePath, inline
    filePath: 'build.ps1'
    arguments: --BuildCounter $(Build.BuildId)
    failOnStderr: true
    workingDirectory: $(Build.SourcesDirectory)

# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: $(Build.ArtifactStagingDirectory)
#     artifactName: MyBuildOutputs



# IMPORTANT 
# Install AzurePS https://docs.microsoft.com/en-us/powershell/azure/install-az-ps

# - task: AzureFileCopy@3
#   inputs:
#     sourcePath: $(Build.ArtifactStagingDirectory)
#     azureSubscription: 'antipiracy-eu-west-free-2' # 
#     destination: azureBlob
#     storage: 'antipiracytest'
#     containerName: 'antipiracycontainer'


